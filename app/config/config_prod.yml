imports:
    - { resource: config.yml }

#framework:
#    validation:
#        cache: validator.mapping.cache.apc
#    serializer:
#        cache: serializer.mapping.cache.apc

#doctrine:
#    orm:
#        metadata_cache_driver: apc
#        result_cache_driver: apc
#        query_cache_driver: apc

monolog:
    handlers:
        main:
            type:         fingers_crossed
            action_level: error
            handler:      nested
        nested:
            type:  stream
            path:  "%kernel.logs_dir%/%kernel.environment%.log"
            level: debug
        console:
            type:  console
sonata_media:
    # if you don't use default namespace configuration
    #class:
    #    media: MyVendor\MediaBundle\Entity\Media
    #    gallery: MyVendor\MediaBundle\Entity\Gallery
    #    gallery_has_media: MyVendor\MediaBundle\Entity\GalleryHasMedia
    default_context: default
    db_driver: doctrine_orm # or doctrine_mongodb, doctrine_phpcr
    contexts:
        default:  # the default context is mandatory
            providers:
                - sonata.media.provider.dailymotion
                - sonata.media.provider.youtube
                - sonata.media.provider.image
                - sonata.media.provider.file

            formats:
                small: { width: 100 , quality: 70}
                big:   { width: 500 , quality: 70}
            download:
                strategy: sonata.media.security.superadmin_strategy
                mode: http
        person:
            providers:
                - sonata.media.provider.image
                - sonata.media.provider.file

            formats:
                preview:   { width: 100, quality: 100}
                small:     { width: 200, quality: 100}
                large:     { width: 600, quality: 100}
            download:
                strategy: sonata.media.security.connected_strategy
                mode: http
        backoffice:
            providers:
                - sonata.media.provider.image
                - sonata.media.provider.file
            formats:
                preview:   { width: 100, quality: 100}
            download:
                strategy: sonata.media.security.connected_strategy
                mode: http
    cdn:
        server:
            path: https://s3.amazonaws.com/mediasymplifica
    providers:
        image:
            filesystem: sonata.media.filesystem.s3
            cdn:        sonata.media.cdn.server

        file:
            filesystem: sonata.media.filesystem.s3
            cdn:        sonata.media.cdn.server


    filesystem:
        s3:
            bucket: "%s3_bucket_name%"
            accessKey: "%s3_access_key%"
            secretKey: "%s3_secret_key%"
            #version: "%s3_version%"
            region: "us-east-1"
            #sdk_version: 2 # 2 by default
            create: false
