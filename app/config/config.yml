imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: @RocketSellerTwoPickBundle/Resources/config/admin.yml }
    - { resource: doctrine_extensions.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: es
    hwi_oauth.user.provider.fosub_bridge.class: RocketSeller\TwoPickBundle\Security\Core\User\FOSUBUserProvider

framework:
    #esi:             ~
    translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    form:
        resources: ['bootstrap_3_layout.html.twig', 'SonataMediaBundle:Form:media_widgets.html.twig']
    globals:
        fos_csrf_provider: "@form.csrf_provider"


# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    bundles:        [ ]
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: "%kernel.root_dir%/Resources/java/compiler.jar"
        #yui_css:
        #    jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"
        types:
            json: Sonata\Doctrine\Types\JsonType
    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true
        mappings:
            translatable:
                type: annotation
                alias: Gedmo
                prefix: Gedmo\Translatable\Entity
                # make sure vendor library location is correct
                dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Translatable/Entity"
            loggable:
                type: annotation
                alias: Gedmo
                prefix: Gedmo\Loggable\Entity
                dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Loggable/Entity"
            tree:
                type: annotation
                alias: Gedmo
                prefix: Gedmo\Tree\Entity
                dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Tree/Entity"

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    port:      "%mailer_port%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    encryption: "%mailer_encrypt%"
    spool:     { type: memory }
    auth_mode:  login

accord_mandrill_swift_mailer:
    api_key: "%mandrill_api_key%"

fos_user:
    db_driver: orm # other valid values are 'mongodb', 'couchdb' and 'propel'
    firewall_name: main
    user_class: RocketSeller\TwoPickBundle\Entity\User
    registration:
        confirmation:
            from_email: # Use this node only if you don't want the global email address for the confirmation email
                address:        "%from_email_address_registration%"
                sender_name:    "%from_email_sender_name_registration%"
            enabled:    true # change to true for required email confirmation
            template:   FOSUserBundle:Registration:email.txt.twig
        form:
            type:               app_user_registration
            name:               app_user_registration_form
            validation_groups:  [Registration, Default]
    resetting:
        token_ttl: 120
        email:
            from_email: # Use this node only if you don't want the global email address for the resetting email
                address:        "%from_email_address_resetting%"
                sender_name:    "%from_email_sender_name_resetting%"
            template:   FOSUserBundle:Resetting:email.txt.twig
        form:
            type:               fos_user_resetting
            name:               fos_user_resetting_form
            validation_groups:  [ResetPassword, Default]
    service:
        mailer:                 symplifica.mailer.twig_swift

sonata_block:
    default_contexts: [cms]
    blocks:
        # Enable the SonataAdminBundle block
        sonata.admin.block.admin_list:
            contexts:   [admin]
        # Your other blocks
        sonata.block.service.text:
        sonata.block.service.rss:
        sonata.admin.block.search_result:

fos_rest:
    param_fetcher_listener: true
    body_listener: true
    format_listener: true
    view:
        view_response_listener: 'force'
        formats:
            xml: true
            json : true
        templating_formats:
            html: true
        force_redirects:
            html: true
        failed_validation: HTTP_BAD_REQUEST
        default_engine: twig
    routing_loader:
        default_format: json

nelmio_api_doc:
    name: 2Pick API Documentation

guzzle:
    clients:
        api_rest:
            base_url: "http://2pick.co:8080/2PickBase/2pick_develop/web/app_dev.php/api/"

            # custom headers
            headers:
                Accept: "application/json"

            # guzzle client options (full description here: http://guzzle.readthedocs.org/en/latest/request-options.html)
            # NOTE: "headers" option is not accepted here as it is provided as described above.
            options:
                timeout: 30

            # plugin settings preguntar que es esto?? y de donde sacamos el username y password
            #plugin:
             #   wsse:
              #      username: fabian.padilla
               #     password: $2y$13$iihkvl78gyokgww8w4owse8fKC8uZrhPWSZQAsJmp2vvIicTqv1xS

hwi_oauth:
    # name of the firewall in which this bundle is active, this setting MUST be set
    firewall_name: main
    connect:
        account_connector: my_user_provider
        confirmation: true
        #account_connector: hwi_oauth.user.provider.fosub_bridge
        #registration_form_handler: hwi_oauth.registration.form.handler.fosub_bridge
        #registration_form: fos_user.registration.form

    resource_owners:
        facebook:
            type:                facebook
            client_id:           %app_fb_id%
            client_secret:       %app_fb_secret%
            scope:               %app_fb_permissions%
            infos_url:           "https://graph.facebook.com/me?fields=id,name,email"
            paths:
                email:          email
            options:
                display: popup #dialog is optimized for popup window
        google:
            type:                google
            client_id:           %app_google_id%
            client_secret:       %app_google_secret%
            scope:               %app_google_permissions%
            paths:
                email:           email
                profilepicture:  picture
        linkedin:
            type:           linkedin
            client_id:      %app_linkedin_id%
            client_secret:  %app_linkedin_secret%
            scope:          %app_linkedin_permissions%
            infos_url:     "https://api.linkedin.com/v1/people/~:(id,email-address,formatted-name)?format=json"

    fosub:
        # try 30 times to check if a username is available (foo, foo1, foo2 etc)
        username_iterations: 30

        # mapping between resource owners (see below) and properties
        properties:
            facebook: facebook_id
            google: google_id
            linkedin: linkedin_id

fs_solr:
    endpoints:
        core1:
            host: ec2-52-21-206-174.compute-1.amazonaws.com
            port: 8983
            path: /solr/2pick
            core: 2pick
            timeout: 5
doctrine:
    orm:
        entity_managers:
            default:
                mappings:
                    SonataMediaBundle: ~
                    ApplicationSonataMediaBundle: ~
    dbal:
        types:
            json: Sonata\Doctrine\Types\JsonType
sonata_media:
    # if you don't use default namespace configuration
    #class:
    #    media: MyVendor\MediaBundle\Entity\Media
    #    gallery: MyVendor\MediaBundle\Entity\Gallery
    #    gallery_has_media: MyVendor\MediaBundle\Entity\GalleryHasMedia
    default_context: default
    db_driver: doctrine_orm # or doctrine_mongodb, doctrine_phpcr
    contexts:
        default:  # the default context is mandatory
            providers:
                - sonata.media.provider.dailymotion
                - sonata.media.provider.youtube
                - sonata.media.provider.image
                - sonata.media.provider.file

            formats:
                small: { width: 100 , quality: 70}
                big:   { width: 500 , quality: 70}
            download:
                strategy: sonata.media.security.superadmin_strategy
                mode: http
        person:
            providers:
                - sonata.media.provider.image
                - sonata.media.provider.file

            formats:
                preview:   { width: 100, quality: 100}
                small:     { width: 200, quality: 100}
                large:     { width: 600, quality: 100}
            download:
                strategy: sonata.media.security.connected_strategy
                mode: http
    cdn:
        server:
            path: /uploads/media # http://media.sonata-project.org/

    filesystem:
        local:
            directory:  %kernel.root_dir%/../web/uploads/media
            create:     false
sonata_media:
    providers:
        image:
            resizer: sonata.media.resizer.square
vresh_twilio:
    #(Required) Your Account SID from www.twilio.com/user/account
    sid: 'AC1cbb80c722300b240bce151c107f927a'
    #(Required) Your Auth Token from www.twilio.com/user/account
    authToken: '35539b53c1cdbd4f1cfccfa1bc558e34'
    #(Optional, default: '2010-04-01') Twilio API version
    version: '2010-04-01'
    #(Optional, default: 1) Number of times to retry failed requests
    retryAttempts: 3

services:
    twig.extension.intl:
        class: Twig_Extensions_Extension_Intl
        tags:
            - { name: twig.extension }