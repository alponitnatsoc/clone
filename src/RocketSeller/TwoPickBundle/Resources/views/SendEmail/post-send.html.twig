{% extends "::base.html.twig" %}
{% block content %}
<form action="{{ sendEmailSerivice }}" method="post" name="send_email">
Template name: <input value="" name="template_name" type="text" />
To 1: <input value="" name="to[0][email]" type="text" />
To 2: <input value="" name="to[1][email]" type="text" />
To 3: <input value="" name="to[2][email]" type="text" />
To 4: <input value="" name="to[3][email]" type="text" />
<input type="submit" />
</form>
<a href="javascript:void(0)" onclick="javascript:test2()">TEST</a>
<a href="javascript:void(0)" onclick="javascript:test()">Service Status User</a>
<a href="javascript:void(0)" onclick="javascript:test3()">Service update User status</a>


<input onkeypress="formatMoneyTest($(this))" type="text" id="register_employee_employeeHasEmployers_salary" name="register_employee[employeeHasEmployers][salary]" required="required" class="format-money form-control" aria-required="true">
<span class="input-group-addon"> COP</span>
<button onclick="unformat($('.format-money'))">UNFORMAT</button>

<script type='text/javascript'>
function test3() {
	$.ajax({
        url: "/api/secured/v1/updates/users/statuses",
        type: 'POST',
        data: {id: 1, status: 1},
        success: function(data) {
            alert(data);
        }
    });
}
function test() {
    $.ajax({
        url: "/api/secured/v1/user/status",
        type: 'PUT',
        data: {id: 1},
        success: function(data) {
            alert(data);
        }
    });

//     getAuthorizationHeader = function (username, password) {
//         var up = $.base64.encode(username + ":" + password);
//         authType = "Basic " + up;
//         return authType;
//     },


//     $.ajax({
//         url: "/api/secured/v1/user/status",
//         data: {id: 1},
//         type: "PUT",
//         beforeSend: function (xhr) {
// //             xhr.setRequestHeader("Authorization", getAuthorizationHeader("cakego@freeletter.me", "cakego@freeletter.me"));
//             xhr.setRequestHeader(
//                     "Authorization",'WSSE profile="UsernameToken"'
//             );
//             xhr.setRequestHeader(
//                     "X-WSSE", generateWsseToken(username, secret)
//             );
//         },
//         headers: config.getApiHeaders(),
//         success: function (data) {
//             alert(data);
//         },
//         error: function (xhr, textError) {
//             alert(xhr.responseText);
//         }
//     });
}

function test2() {
    var email = "romero.p.mfc@gmail.com";

    $.post( "/api/public/v1/suscribes/users", { email: email })
    .done(function( data ) {
        var arrayData = {email:email, name:email, type:"to"};
        alert(arrayData);

    }).fail(function(data){
        alert("bud");
    });
}
</script>
{%  endblock %}
{% block javascripts %}
{{ parent() }}
<script>
accounting.settings = {
    currency: {
        symbol : "$",   // default currency symbol is '$'
        format: "%s%v", // controls output: %s = symbol, %v = value/number (can be object: see below)
        decimal : ".",  // decimal point separator
        thousand: ",",  // thousands separator
        precision : 2   // decimal places
    },
    number: {
        precision : 2,  // default precision on numbers is 0
        thousand: ",",
        decimal : "."
    }
}
function formatMoneyTest(element) {
// $(element).bind('keydown keyup keypress focus blur paste change', function() {
// // $(".format-money").bind('keydown keyup keypress focus blur paste change', function() {
//     $(element).val(accounting.formatMoney($(element).val()));
// });
$(element).priceFormat({
    prefix: '$ ',
    centsSeparator: '.',
    thousandsSeparator: ',',
    centsLimit: 2
});
}
function unformat(element) {
    $(element).val(accounting.unformat($(element).val()));
//     $(element).val($(element).unmask());
}
</script>
{% endblock javascripts %}