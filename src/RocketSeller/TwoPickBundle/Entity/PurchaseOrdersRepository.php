<?php

namespace RocketSeller\TwoPickBundle\Entity;

/**
 * PurchaseOrdersRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PurchaseOrdersRepository extends \Doctrine\ORM\EntityRepository
{

	/**
	 * Function used to update the status of a Purchase Order
	 * @param int $id Purchase Order's id
	 * @param type $status New status
	 * @return boolean true on success / false on error
	 */
	public function updateOrderStatus(PurchaseOrders $id, PurchaseOrdersStatus $status) {
		$em = $this->getEntityManager();
		$order = $this->find($id);
		$order->setPurchaseOrdersTypePurchaseOrdersStatus($status);
		$em->flush();
	}

	public function getOrders() {	
		$purchaseOrders = $this->findAll();
		return $purchaseOrders;
	}

	public function getOrdersForEmployee($employee_id) {
		$em = $this->getEntityManager();
		$query = $em->createQuery("SELECT po FROM RocketSellerTwoPickBundle:PurchaseOrders po JOIN po.payrollPayroll p JOIN p.contractContract c JOIN c.employerHasEmployeeEmployerHasEmployee e WHERE e.employeeEmployee=?1");
		$query->setParameter(1, $employee_id);
		return $query->getResult();
	}

	public function getOrdersForEmployer($employer_id) {
		$em = $this->getEntityManager();
		$query = $em->createQuery("SELECT po FROM RocketSellerTwoPickBundle:PurchaseOrders po JOIN po.payrollPayroll p JOIN p.contractContract c JOIN c.employerHasEmployeeEmployerHasEmployee e WHERE e.employerEmployer=?1");
		$query->setParameter(1, $employer_id);
		return $query->getResult();
	}
}